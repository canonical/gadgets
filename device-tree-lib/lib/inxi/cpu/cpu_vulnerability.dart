import 'package:device_tree_lib/tree_node_representable.dart';
import 'package:flutter_fancy_tree_view/flutter_fancy_tree_view.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

part 'cpu_vulnerability.freezed.dart';
part 'cpu_vulnerability.g.dart';

@freezed
class CPUVulnerability
    with _$CPUVulnerability
    implements TreeNodeRepresentable {
  const CPUVulnerability._();

  factory CPUVulnerability(
      {required String status,
      required String type,
      String? mitigation}) = _CPUVulnerability;

  factory CPUVulnerability.fromMap(Map<String, dynamic> map) =>
      CPUVulnerability(
          status: map['status']!,
          type: map['Type']!,
          mitigation: map['mitigation']);

  factory CPUVulnerability.fromJson(Map<String, dynamic> json) =>
      _$CPUVulnerabilityFromJson(json);

  static bool isRepresentation(Map<String, dynamic> map) {
    return map['Type'] != null && map['status'] != null;
  }

  @override
  TreeNode treeNodeRepresentation() {
    final mitigationString = mitigation ?? "(No mitigation)";
    return TreeNode(
        id: type,
        data: this,
        label: "status:$status, mitigation: $mitigationString");
  }

  @override
  Iterable<TreeNodeRepresentable> children() {
    return [];
  }
}
